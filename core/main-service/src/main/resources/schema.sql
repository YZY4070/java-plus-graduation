CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(250) NOT NULL,
    email VARCHAR(254) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    CONSTRAINT unique_category_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS locations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat DOUBLE PRECISION NOT NULL, --широта
    lon DOUBLE PRECISION NOT NULL, --долгота
    CONSTRAINT unique_location UNIQUE (lat, lon)
);

CREATE TABLE IF NOT EXISTS events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(120) NOT NULL,
    annotation VARCHAR(2000) NOT NULL, --краткое описание события
    description VARCHAR(7000) NOT NULL, --полное описание
    category_id BIGINT NOT NULL,
    event_date TIMESTAMP NOT NULL,
    location_id BIGINT NOT NULL,
    paid BOOLEAN NOT NULL, --нужно ли оплачивать событие
    participant_limit INTEGER NOT NULL DEFAULT 0, --количество участников
    request_moderation BOOLEAN NOT NULL DEFAULT TRUE,
    confirmed_requests INTEGER NOT NULL DEFAULT 0,
    created_on TIMESTAMP NOT NULL, --дата создания события
    initiator_id BIGINT NOT NULL,
    state VARCHAR(20) NOT NULL, --статус события (опубликован и тд)
    published_on TIMESTAMP, --дата публикации события
    CONSTRAINT fk_events_to_users FOREIGN KEY (initiator_id) REFERENCES users(id),
    CONSTRAINT fk_events_categories FOREIGN KEY (category_id) REFERENCES categories(id),
    CONSTRAINT fk_events_locations FOREIGN KEY (location_id) REFERENCES locations(id)
);

CREATE TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(50) NOT NULL,
    pinned BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS events_compilations (
    compilation_id BIGINT REFERENCES compilations (id),
    event_id BIGINT REFERENCES events (id),
    PRIMARY KEY (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id BIGINT NOT NULL,
    requester_id BIGINT NOT NULL,
    status VARCHAR(10) NOT NULL,
    created TIMESTAMP NOT NULL,
    CONSTRAINT fk_requests_to_events FOREIGN KEY(event_id) REFERENCES events(id),
    CONSTRAINT fk_requests_to_users FOREIGN KEY(requester_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text VARCHAR(2000) NOT NULL,
    event_id BIGINT NOT NULL,
    author_id BIGINT NOT NULL,
    created TIMESTAMP NOT NULL,
    CONSTRAINT fk_comments_to_users FOREIGN KEY (author_id) REFERENCES users(id),
    CONSTRAINT fk_comments_to_events FOREIGN KEY (event_id) REFERENCES events(id)
)